name: build_poc
on:
  push:
    branches: [master]
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@master
          
        - name: 'Login via Azure CLI'       
          uses: azure/docker-login@v1
          with:
            login-server: devnextgen.azurecr.io
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        
        - name: Build and push image to ACR
          id: build-image
          run: | 
            #docker build ./client -t devnextgen.azurecr.io/nodejssampleapp:${{ github.sha }}
            #docker push devnextgen.azurecr.io/nodejssampleapp:${{ github.sha }}
            docker build ./client -t devnextgen.azurecr.io/client:v1
            docker push devnextgen.azurecr.io/client:v1
            docker build ./server -t devnextgen.azurecr.io/server:v1
            docker push devnextgen.azurecr.io/server:v1
            docker build ./worker -t devnextgen.azurecr.io/worker:v1
            docker push devnextgen.azurecr.io/worker:v1
            
        - uses: azure/k8s-set-context@v1
          with:
            kubeconfig: ${{ secrets.aks_rsicedevnxgaks_kubeConfig }}
          id: login
    
        - name: Create namespace
          run: |
            namespacePresent=`kubectl get namespace | grep default | wc -l`
            if [ $namespacePresent -eq 0 ]
            then
              echo `kubectl create namespace default`
            fi
        - uses: azure/k8s-create-secret@v1
          with:
            namespace: default
            container-registry-url: devnextgen.azurecr.io
            container-registry-username: ${{ secrets.acr_devnextgen_username }}
            container-registry-password: ${{ secrets.acr_devnextgen_password }}
            secret-name: rsicedevnxgadockerauth
            
    deploy:
        needs: build
        runs-on: ubuntu-latest
        environment: DEV
        steps:
        - name: 'Deploy to AKS'
          uses: azure/k8s-deploy@v1.2
          with:
            namespace: default
            manifests: |
              .k8s/client-deployment.yml
              .k8s/client-service.yml
            images: |
              devnextgen.azurecr.io/client:v1
            imagepullsecrets: |
              rsicedevnxgadockerauth
          
#test
