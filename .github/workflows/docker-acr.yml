name: build_poc
on:
  push:
    branches: [master]
    paths-ignore:
    #- '.github/workflows/**'
    - 'manifests/**'
    - 'k8s/**'
    
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@master
          
        - name: 'Login via Azure CLI'       
          uses: Azure/login@v1
          with:
            creds: ${{ secrets.AZURE_SUBSCRIPTION }}
        - name: ACR Login
          run: |
            az acr login --name ${{ secrets.ACR }}
            
        - name: Build and push image to ACR
          id: build-image
          run: | 
            #docker build ./client -t devnextgen.azurecr.io/nodejssampleapp:${{ github.sha }}
            #docker push devnextgen.azurecr.io/nodejssampleapp:${{ github.sha }}
            docker build ./client -t devnextgen.azurecr.io/client
            docker push devnextgen.azurecr.io/client
            docker build ./server -t devnextgen.azurecr.io/server:${{ github.sha }}
            docker push devnextgen.azurecr.io/server:${{ github.sha }}
            docker build ./worker -t devnextgen.azurecr.io/worker:${{ github.sha }}
            docker push devnextgen.azurecr.io/worker:${{ github.sha }}
            
        - uses: azure/k8s-set-context@v1
          with:
            kubeconfig: ${{ secrets.aks_rsicedevnxgaks_kubeConfig }}
          id: login
    
        - name: Create namespace
          run: |
            namespacePresent=`kubectl get namespace | grep default | wc -l`
            if [ $namespacePresent -eq 0 ]
            then
              echo `kubectl create namespace default`
            fi
        - uses: azure/k8s-create-secret@v1
          with:
            namespace: default
            container-registry-url: devnextgen.azurecr.io
            container-registry-username: ${{ secrets.acr_devnextgen_username }}
            container-registry-password: ${{ secrets.acr_devnextgen_password }}
            secret-name: rsicedevnxgadockerauth
    
    deploy_dev:
        needs: build
        runs-on: ubuntu-latest
        env:
          AKS_RESOURCE_GROUP: ${{ secrets.AKS_RESOURCE_GROUP }} # e.g. 'aks_cicd_dev_rg'
          AKS_NAME: ${{ secrets.AKS_NAME }} # e.g. 'akscicddev-aks-b1ce1'
          #AKS_APP_NAMESPACE: ${{ github.event.deployment.environment }}
          ACR_APP_IMAGE: ${{ secrets.ACR }} #/${{ needs.deploy_details.outputs.app_container_image }} # e.g. ACR = 'akscicddevacrb1ce1.azurecr.io'
          #ACR_APP_IMAGE_TAG: ${{ needs.deploy_details.outputs.app_container_version }}
          WORKING-DIECTORY: ./k8s
 
        steps:
          - uses: actions/checkout@master
          - name: Azure Login
            uses: Azure/login@v1
            with:
              creds: ${{ secrets.AZURE_SUBSCRIPTION }}
          - name: AZ AKS Login
            run: az aks get-credentials --resource-group ${{ env.AKS_RESOURCE_GROUP }} --name ${{ env.AKS_NAME }} --overwrite-existing --admin
            shell: bash
          - name: Run kubectl
            run: kubectl apply -f ${{ env.WORKING-DIECTORY }}
            env:
              AZURE_CREDENTIALS: ${{ secrets.AZURE_SUBSCRIPTION }}
